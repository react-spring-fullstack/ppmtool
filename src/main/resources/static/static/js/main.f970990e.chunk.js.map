{"version":3,"sources":["apis/ppmtool.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReduer.js","reducers/securityReducer.js","reducers/index.js","actions/types.js","store.js","history.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","security/SecuredRoute.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTask/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTask/AddProjectTask.js","components/ProjectBoard/ProjectTask/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","App.js","index.js"],"names":["Ppmtool","axios","create","baseURL","interceptors","response","use","error","Promise","reject","setJWTToken","token","defaults","headers","common","INITIAL_STATE","projects","project","project_tasks","project_task","user","validToken","combineReducers","errors","state","action","type","payload","filter","projectIdentifier","backlog","projectSequence","security","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","createBrowserHistory","createProject","dispatch","a","ppmtool","post","history","push","data","ProjectItem","onDelete","id","props","deleteProject","className","this","projectName","description","to","onClick","React","Component","connect","confirm","delete","CreateProjectButton","Fragment","Dashboard","renderProjectItem","map","key","getProjects","get","logout","localStorage","removeItem","Header","location","href","fullname","handleLogOut","data-toggle","data-target","renderUserIsAuthenticated","renderUserIsNotAuthenticated","AddProject","onSubmit","event","preventDefault","newProject","startDate","endDate","nextProps","setState","classnames","placeholder","name","autoComplete","value","onChange","e","target","component","otherProps","render","UpdateProject","updateProject","getProject","match","params","disabled","ProjectTask","onDeleteProjectTask","backlogId","ptId","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","newTask","dueDate","addProjectTask","projectTask","UpdateProjectTask","updateProjectTask","createdAt","getProjectTask","patch","Landing","Register","newUser","username","fullName","password","confirmPassword","createNewUser","Login","loginRequest","login","setItem","jwtDecoded","jwt_decoder","jwtToken","getItem","currentTime","Date","now","exp","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f970990e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst Ppmtool = axios.create({\n  baseURL: \"https://aromero-ppmtool.herokuapp.com\",\n});\n\nPpmtool.interceptors.response.use(\n  function (response) {\n    return response;\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\n\nexport const setJWTToken = (token) => {\n  if (token) {\n    Ppmtool.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete Ppmtool.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default Ppmtool;\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst INITIAL_STATE = {};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import { GET_PROJECTS, GET_PROJECT, DELETE_RPOJECT } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  projects: [],\n  project: {},\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return { ...state, projects: action.payload };\n    case GET_PROJECT:\n      return { ...state, project: action.payload };\n    case DELETE_RPOJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_RPOJECT_TASK,\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  project_tasks: [],\n  project_task: {},\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return { ...state, project_tasks: action.payload };\n    case GET_PROJECT_TASK:\n      return { ...state, project_task: action.payload };\n    case DELETE_RPOJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          (project_task) => project_task.projectSequence !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n};\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  user: {},\n  validToken: false,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: action.payload ? true : false,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReduer from \"./backlogReduer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReduer,\n  security: securityReducer,\n});\n","export const GET_ERRORS = \"GET_ERRORS\";\n\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_RPOJECT = \"DELETE_RPOJECT\";\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\n\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_RPOJECT_TASK = \"DELETE_RPOJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nexport default store;\n","import { createBrowserHistory } from 'history'; \nexport default createBrowserHistory();","import ppmtool from \"../apis/ppmtool\";\nimport history from \"../history\";\n\nimport {\n  GET_ERRORS,\n  GET_PROJECTS,\n  GET_PROJECT,\n  DELETE_RPOJECT,\n} from \"../actions/types\";\n\nexport const createProject = (project) => async (dispatch) => {\n  try {\n    await ppmtool.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({ type: GET_ERRORS, payload: {} });\n  } catch (error) {\n    dispatch({ type: GET_ERRORS, payload: error.response.data });\n  }\n};\n\nexport const getProjects = () => async (dispatch) => {\n  const response = await ppmtool.get(\"/api/project/all\");\n  dispatch({ type: GET_PROJECTS, payload: response.data });\n};\n\nexport const getProject = (id) => async (dispatch) => {\n  const response = await ppmtool.get(`/api/project/${id}`);\n  dispatch({ type: GET_PROJECT, payload: response.data });\n};\n\nexport const deleteProject = (id) => async (dispatch) => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all the data related to it\"\n    )\n  ) {\n    await ppmtool.delete(`/api/project/${id}`);\n    dispatch({ type: DELETE_RPOJECT, payload: id });\n  }\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends React.Component {\n  onDelete = (id) => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">\n                {this.props.project.projectIdentifier}\n              </span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{this.props.project.projectName}</h3>\n              <p>{this.props.project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link\n                  to={`/projectBoard/${this.props.project.projectIdentifier}`}\n                >\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\">Project Board </i>\n                  </li>\n                </Link>\n                <Link\n                  to={`/updateProject/${this.props.project.projectIdentifier}`}\n                >\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\">Update Project Info</i>\n                  </li>\n                </Link>\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={() =>\n                    this.onDelete(this.props.project.projectIdentifier)\n                  }\n                >\n                  <i className=\"fa fa-minus-circle pr-1\">Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\n\nimport { getProjects } from \"../actions/projectActions\";\n\nclass Dashboard extends React.Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  renderProjectItem = () => {\n    return this.props.project.projects.map((project) => {\n      return <ProjectItem key={project.id} project={project} />;\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n              <br />\n              <hr />\n              {this.renderProjectItem()}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import ppmtool, { setJWTToken } from \"../apis/ppmtool\";\nimport history from \"../history\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport jwt_decoder from \"jwt-decode\";\n\nexport const createNewUser = (newUser) => async (dispatch) => {\n  try {\n    await ppmtool.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({ type: GET_ERRORS, payload: {} });\n  } catch (error) {\n    dispatch({ type: GET_ERRORS, payload: error.response.data });\n  }\n};\n\nexport const login = (loginRequest) => async (dispatch) => {\n  try {\n    const response = await ppmtool.post(\"/api/users/login\", loginRequest);\n    const { token } = response.data;\n    localStorage.setItem(\"jwtToken\", token);\n    setJWTToken(token);\n    const jwtDecoded = jwt_decoder(token);\n    dispatch({ type: SET_CURRENT_USER, payload: jwtDecoded });\n  } catch (error) {\n    dispatch({ type: GET_ERRORS, payload: error.response.data });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({ type: SET_CURRENT_USER, payload: {} });\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n//import classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends React.Component {\n  handleLogOut() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n\n  renderUserIsAuthenticated() {\n    const { user } = this.props.security;\n    return (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullname}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <span onClick={() => this.handleLogOut()} className=\"nav-link\">\n              Logout\n            </span>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n\n  renderUserIsNotAuthenticated() {\n    return (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {this.props.security.user && this.props.security.validToken\n            ? this.renderUserIsAuthenticated()\n            : this.renderUserIsNotAuthenticated()}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  security: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nimport { createProject } from \"../../actions/projectActions\";\n\nclass AddProject extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      errors: {},\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n    };\n    this.props.createProject(newProject);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Create Project</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName,\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    autoComplete=\"off\"\n                    value={this.state.projectName}\n                    onChange={(e) =>\n                      this.setState({ projectName: e.target.value })\n                    }\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectIdentifier,\n                    })}\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    autoComplete=\"off\"\n                    value={this.state.projectIdentifier}\n                    onChange={(e) =>\n                      this.setState({ projectIdentifier: e.target.value })\n                    }\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    autoComplete=\"off\"\n                    value={this.state.description}\n                    onChange={(e) =>\n                      this.setState({ description: e.target.value })\n                    }\n                  ></textarea>\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"startDate\"\n                    autoComplete=\"off\"\n                    value={this.state.startDate}\n                    onChange={(e) =>\n                      this.setState({ startDate: e.target.value })\n                    }\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"endDate\"\n                    autoComplete=\"off\"\n                    value={this.state.endDate}\n                    onChange={(e) => this.setState({ endDate: e.target.value })}\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={(props) =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nimport { getProject, createProject } from \"../../actions/projectActions\";\n\nclass UpdateProject extends React.Component {\n  state = {\n    id: \"\",\n    projectName: \"\",\n    projectIdentifier: \"\",\n    description: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    errors: {},\n  };\n\n  componentDidMount() {\n    this.props.getProject(this.props.match.params.id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      startDate,\n      endDate,\n    } = nextProps.project;\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      startDate,\n      endDate,\n    });\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n    };\n    this.props.createProject(updateProject);\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Edit Project</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName,\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={(e) =>\n                      this.setState({ projectName: e.target.value })\n                    }\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectIdentifier,\n                    })}\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={(e) =>\n                      this.setState({ projectIdentifier: e.target.value })\n                    }\n                    disabled\n                  />\n                  {errors.projectIdentifier && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={(e) =>\n                      this.setState({ description: e.target.value })\n                    }\n                  ></textarea>\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.startDate,\n                    })}\n                    name=\"startDate\"\n                    value={this.state.startDate}\n                    onChange={(e) =>\n                      this.setState({ startDate: e.target.value })\n                    }\n                  />\n                  {errors.startDate && (\n                    <div className=\"invalid-feedback\">{errors.startDate}</div>\n                  )}\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.endDate,\n                    })}\n                    name=\"endDate\"\n                    value={this.state.endDate}\n                    onChange={(e) => this.setState({ endDate: e.target.value })}\n                  />\n                  {errors.endDate && (\n                    <div className=\"invalid-feedback\">{errors.endDate}</div>\n                  )}\n                </div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project.project,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\n\nclass ProjectTask extends React.Component {\n  onDeleteProjectTask = (backlogId, ptId) => {\n    this.props.deleteProjectTask(backlogId, ptId);\n  };\n\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} - Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/pt/${project_task.projectSequence}`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={() =>\n              this.onDeleteProjectTask(\n                project_task.projectIdentifier,\n                project_task.projectSequence\n              )\n            }\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import ppmtool from \"../apis/ppmtool\";\nimport history from \"../history\";\n\nimport {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_RPOJECT_TASK,\n  GET_ERRORS,\n} from \"../actions/types\";\n\nexport const addProjectTask = (backlogId, projectTask) => async (dispatch) => {\n  try {\n    await ppmtool.post(`/api/backlog/${backlogId}`, projectTask);\n    history.push(`/projectBoard/${backlogId}`);\n    dispatch({ type: GET_ERRORS, payload: {} });\n  } catch (error) {\n    dispatch({ type: GET_ERRORS, payload: error.response.data });\n  }\n};\n\nexport const getBacklog = (backlogId) => async (dispatch) => {\n  try {\n    const response = await ppmtool.get(`/api/backlog/${backlogId}`);\n    dispatch({ type: GET_BACKLOG, payload: response.data });\n  } catch (error) {\n    dispatch({ type: GET_ERRORS, payload: error.response.data });\n  }\n};\n\nexport const getProjectTask = (backlogId, ptId) => async (dispatch) => {\n  try {\n    const response = await ppmtool.get(`/api/backlog/${backlogId}/pt/${ptId}`);\n    dispatch({ type: GET_PROJECT_TASK, payload: response.data });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (backlogId, ptId, projectTask) => async (\n  dispatch\n) => {\n  try {\n    await ppmtool.patch(`/api/backlog/${backlogId}/pt/${ptId}`, projectTask);\n    history.push(`/projectBoard/${backlogId}`);\n    dispatch({ type: GET_ERRORS, payload: {} });\n  } catch (error) {\n    dispatch({ type: GET_ERRORS, payload: error.response.data });\n  }\n};\n\nexport const deleteProjectTask = (backlogId, ptId) => async (dispatch) => {\n  try {\n    if (\n      window.confirm(\n        `You are deleting project task ${ptId}, This action cannot be undone.`\n      )\n    ) {\n      await ppmtool.delete(`/api/backlog/${backlogId}/pt/${ptId}`);\n      dispatch({ type: DELETE_RPOJECT_TASK, payload: ptId });\n    }\n  } catch (error) {}\n};\n","import React from \"react\";\n\nimport ProjectTask from \"./ProjectTask/ProjectTask\";\n\nclass Backlog extends React.Component {\n  render() {\n    const { project_tasks } = this.props;\n\n    const tasks = project_tasks.map((project_task) => {\n      return <ProjectTask key={project_task.id} project_task={project_task} />;\n    });\n\n    const todoItems = [];\n    const inProgressItems = [];\n    const doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nimport Backlog from \"./Backlog\";\n\nclass ProjectBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errors: {},\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              No project tasks on this board.\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  backlog: state.backlog,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nimport PropTypes from \"prop-types\";\n\nimport { addProjectTask } from \"../../../actions/backlogActions\";\n\nclass AddProjectTask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: props.match.params.id,\n      errors: {},\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n    };\n    this.props.addProjectTask(this.state.projectIdentifier, newTask);\n  };\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={(e) => this.setState({ summary: e.target.value })}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={(e) =>\n                      this.setState({ acceptanceCriteria: e.target.value })\n                    }\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={(e) => this.setState({ dueDate: e.target.value })}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={(e) =>\n                      this.setState({ priority: e.target.value })\n                    }\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={(e) => this.setState({ status: e.target.value })}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nimport PropTypes from \"prop-types\";\n\nimport {\n  getProjectTask,\n  updateProjectTask,\n} from \"../../../actions/backlogActions\";\n\nclass UpdateProjectTask extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      createdAt: \"\",\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    const { backlogId, ptId } = this.props.match.params;\n    this.props.getProjectTask(backlogId, ptId);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    this.setState({\n      id: nextProps.project_task.id,\n      projectSequence: nextProps.project_task.projectSequence,\n      summary: nextProps.project_task.summary,\n      acceptanceCriteria: nextProps.project_task.acceptanceCriteria,\n      status: nextProps.project_task.status,\n      priority: nextProps.project_task.priority,\n      dueDate: nextProps.project_task.dueDate,\n      projectIdentifier: nextProps.project_task.projectIdentifier,\n      createdAt: nextProps.project_task.createdAt,\n    });\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const updateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      createdAt: this.state.createdAt,\n    };\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      updateProjectTask\n    );\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} + Project Task ID:{\" \"}\n                {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={(e) => this.setState({ summary: e.target.value })}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={(e) =>\n                      this.setState({ acceptanceCriteria: e.target.value })\n                    }\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={(e) => this.setState({ dueDate: e.target.value })}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={(e) =>\n                      this.setState({ priority: e.target.value })\n                    }\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={(e) => this.setState({ status: e.target.value })}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport history from \"../../history\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">Personal Kanban Tool</h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start you own\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, {})(Landing);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport history from \"../../history\";\nimport PropTypes from \"prop-types\";\n\nimport { createNewUser } from \"../../actions/securityActions\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n    this.props.createNewUser(newUser);\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName,\n                    })}\n                    placeholder=\"Full name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={(e) =>\n                      this.setState({ fullName: e.target.value })\n                    }\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={(e) =>\n                      this.setState({ username: e.target.value })\n                    }\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={(e) =>\n                      this.setState({ password: e.target.value })\n                    }\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={(e) =>\n                      this.setState({ confirmPassword: e.target.value })\n                    }\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nimport history from \"../../history\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {},\n      security: {},\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      history.push(\"/dashboard\");\n    }\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    if (nextProps.security) {\n      this.setState({ security: nextProps.security });\n    }\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const loginRequest = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n    this.props.login(loginRequest);\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={(e) =>\n                      this.setState({ username: e.target.value })\n                    }\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={(e) =>\n                      this.setState({ password: e.target.value })\n                    }\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decoder from \"jwt-decode\";\n\nimport { setJWTToken } from \"./apis/ppmtool\";\nimport store from \"./store\";\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport AddProject from \"./components/Project/AddProject\";\nimport history from \"./history\";\nimport SecuredRoute from \"./security/SecuredRoute\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTask/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTask/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\n\nconst jwtToken = localStorage.getItem(\"jwtToken\");\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const jwtDecoded = jwt_decoder(jwtToken);\n  store.dispatch({ type: SET_CURRENT_USER, payload: jwtDecoded });\n  const currentTime = Date.now() / 1000;\n  if (jwtDecoded.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router history={history}>\n        <div className=\"App\">\n          <Header />\n          <Switch>\n            {\n              // Public Routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            {\n              // Private Routes\n            }\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute\n              exact\n              path=\"/updateProject/:id\"\n              component={UpdateProject}\n            />\n            <SecuredRoute\n              exact\n              path=\"/projectBoard/:id\"\n              component={ProjectBoard}\n            />\n            <SecuredRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path=\"/updateProjectTask/:backlogId/pt/:ptId\"\n              component={UpdateProjectTask}\n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}